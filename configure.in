dnl Process this file with autoconf to produce a configure script.
AC_REVISION($Revision: 1.10 $)dnl
AC_PREREQ(2.50)
AC_INIT(eXosip/eXosip.h)

dnl require at least autoconf v 2.00
dnl AC_COPYRIGHT (COPYRIGHT-NOTICE)

AC_MSG_NOTICE([eXosip                    The Extended Open SIP library.])
AC_MSG_NOTICE([Copyright (C) 2002,2003   Aymeric MOIZARD - <jack@atosc.org>])

dnl *********************************************************************
dnl Source packaging numbers
EXOSIP_MAJOR_VERSION=0
EXOSIP_MINOR_VERSION=6
EXOSIP_MICRO_VERSION=5

dnl program extension
EXOSIP_VERSION=$EXOSIP_MAJOR_VERSION.$EXOSIP_MINOR_VERSION.$EXOSIP_MICRO_VERSION

LIBEXOSIP_SO_VERSION=`expr $EXOSIP_MINOR_VERSION + $EXOSIP_MAJOR_VERSION`:$EXOSIP_MICRO_VERSION:$EXOSIP_MINOR_VERSION

AC_SUBST(LIBEXOSIP_SO_VERSION, $LIBEXOSIP_SO_VERSION)
AC_SUBST(EXOSIP_VERSION)

VERSION=$EXOSIP_VERSION
PACKAGE=eXosip


dnl *********************************************************************
dnl Initialize automake stuff
AC_CONFIG_AUX_DIR(scripts)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_ACLOCAL_INCLUDE(scripts)

AC_CANONICAL_HOST

AC_SUBST(ac_aux_dir)

dnl Checks for programs.

AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL

dnl enable --enable-shared and --disable-shared options
LT_AC_PROG_SED
AC_PROG_LIBTOOL

AC_ENABLE_SHARED(yes)

dnl declare --enable-* args and collect ac_help strings

AC_ARG_ENABLE(josua,
[  --disable-josua         do not compile josua.],
disable_josua=$enableval,disable_josua="yes")

AC_ARG_ENABLE(mediastreamer,
[  --enable-mediastreamer  link with the mediastreamer.],
enable_mediastreamer=$enableval,enable_mediastreamer="yes")

AC_ARG_ENABLE(ortp,
[  --enable-ortp           do not use ortp.],
enable_ortp=$enableval,enable_ortp="no")

AC_ARG_ENABLE(debug,
[  --disable-debug         turn off debugging.],
disable_debug=$enableval,disable_debug="yes")

AC_ARG_ENABLE(trace,
[  --disable-trace         turn off trace.],
disable_trace=$enableval,disable_trace="yes")

AC_ARG_ENABLE(mleak,
[  --enable-mleak          turn on memory leak detection.],
enable_mleak=$enableval,enable_mleak="no")

AC_ARG_ENABLE(mpatrol,
[  --enable-mpatrol        turn on memory leak detection with patrol.],
enable_mpatrol=$enableval,enable_mpatrol="no")

dnl build with multithreaded support (need semaphore).
AC_ARG_ENABLE(mt,
[  --disable-mt            compile oSIP without multi-thread support.],
enable_mt=$enableval,enable_mt="yes")

dnl support for linux-thread or posix thread (pthread.h)
AC_ARG_ENABLE(pthread,
[  --enable-pthread        enable support for POSIX threads. (autodetect)],
enable_pthread=$enableval,enable_pthread="no")

dnl support for GNU Portable Threads
AC_ARG_ENABLE(pth,
[  --enable-pth            enable support for GNU portable thread.],
enable_pth=$enableval,enable_pth="no")

dnl support for semaphore.h (linux/sun...)
AC_ARG_ENABLE(semaphore,
[  --enable-semaphore      enable support for semaphore (semaphore.h)],
enable_semaphore=$enableval,enable_semaphore="no")

dnl support for sysV semaphore in sys/sem.h (BSD/linux...)
AC_ARG_ENABLE(sysv,
[  --enable-sysv           enable support for sysV semaphore (sys/sem.h).],
enable_sysv=$enableval,enable_sysv="no")

AC_ARG_ENABLE(ncurses,
[  --disable-ncurses       turn off ncurses support.],
disable_ncurses=$enableval,disable_ncurses="yes")

JOSUA_FLAGS="-DOSIP_AT_OSIP_DOT_ORG"

dnl compile with mt support
if test "x$enable_mt" = "xyes"; then
  if test "x$enable_pth" = "xyes"; then
    EXOSIP_FLAGS="-DHAVE_PTH_PTHREAD_H `pthread-config --cflags`"
    EXOSIP_LIB="`pthread-config --ldflags` `pthread-config --libs`"
  elif test "x$enable_pthread" = "xyes"; then
    EXOSIP_FLAGS="-DHAVE_PTHREAD_H"
    EXOSIP_LIB="-lpthread"
  else
    ACX_PTHREAD()
dnl    EXOSIP_LIB="-lpthread"
  fi
  EXOSIP_FLAGS="$EXOSIP_FLAGS -DOSIP_MT"
fi

AM_CONDITIONAL(COMPILE_JOSUA, test "x$disable_josua" = "xyes")

dnl if test "x$enable_mediastreamer" = "xyes"; then
dnl  AM_PATH_GLIB_2_0(2.0.0, ,
dnl	[echo "Glib (> 2.0.0) has not been found"
dnl	enable_mediastreamer="no"
dnl	],
dnl	gthread gmodule)
dnl fi

if test "x$enable_mediastreamer" = "xyes"; then
  JOSUA_FLAGS="$JOSUA_FLAGS -DMEDIASTREAMER_SUPPORT"
fi

if test "x$enable_ortp" = "xyes"; then
  JOSUA_FLAGS="$JOSUA_FLAGS -DORTP_SUPPORT"
fi

AM_CONDITIONAL(COMPILE_ORTP, test "x$enable_ortp" = "xyes")
AM_CONDITIONAL(COMPILE_MEDIASTREAMER, test "x$enable_mediastreamer" = "xyes")

if test "x$enable_semaphore" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -DHAVE_SEMAPHORE_H"
  AC_CHECK_HEADERS(semaphore.h)
elif test "x$enable_sysv" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -UHAVE_SEMAPHORE_H -DHAVE_SYS_SEM_H"
  AC_CHECK_HEADERS(sys/sem.h)
else
  AC_CHECK_HEADERS(semaphore.h)
  AC_CHECK_HEADERS(sys/sem.h)
fi

if test "$host_os" = "hpux11.00" -o "$host_os" = "hpux11.11" ;then
        echo "We are on HPUX"
else
        echo "We are not on HPUX"
	EXOSIP_FLAGS="$EXOSIP_FLAGS -pedantic"
fi

if test "x$disable_debug" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -DENABLE_DEBUG -g"
fi

if test "x$disable_trace" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -DENABLE_TRACE"
fi

if test "x$enable_mleak" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -DENABLE_LEAKD"
fi

if test "x$enable_mpatrol" = "xyes"; then
  EXOSIP_FLAGS="$EXOSIP_FLAGS -DENABLE_MPATROL"
  EXOSIP_LIB="$EXOSIP_LIB -lmpatrolmt -lelf"
fi

dnl Checks for libraries.
AC_CHECK_LIB(posix4,sem_open,[EXOSIP_LIB="$EXOSIP_LIB -lposix4 -mt"])
AC_CHECK_LIB(nsl,nis_add,[EXOSIP_LIB="$EXOSIP_LIB -lnsl"])
AC_CHECK_LIB(socket,sendto,[EXOSIP_LIB="$EXOSIP_LIB -lsocket"])


if test "x$disable_ncurses" = "xyes"; then
  JOSUA_FLAGS="$JOSUA_FLAGS -DNCURSES_SUPPORT"
  AC_CHECK_LIB(ncurses,wgetch,[JOSUA_LIB="-lncurses"])
  AC_CHECK_HEADERS(ncurses.h)
else
  AC_MSG_NOTICE([Compiling without ncurses support.])
fi


EXOSIP_FLAGS="$EXOSIP_FLAGS -DUSE_TMP_BUFFER"

AC_caolan_FUNC_WHICH_GETHOSTBYNAME_R()

AC_SUBST(EXOSIP_FLAGS)
AC_SUBST(JOSUA_FLAGS)
AC_SUBST(JOSUA_LIB)
AC_SUBST(EXOSIP_LIB)

AC_SUBST(CFLAGS)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(ctype.h)
AC_CHECK_HEADERS(string.h)
AC_CHECK_HEADERS(strings.h)
AC_CHECK_HEADERS(stdio.h)
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(stdarg.h)
AC_CHECK_HEADERS(varargs.h)
AC_CHECK_HEADERS(sys/time.h)
AC_CHECK_HEADERS(assert.h)
AC_CHECK_HEADERS(signal.h)
AC_CHECK_HEADERS(sys/signal.h)
AC_CHECK_HEADERS(malloc.h)
AC_CHECK_HEADERS(sys/select.h)
AC_CHECK_HEADERS(sys/types.h)
AC_CHECK_HEADERS(fcntl.h)
AC_CHECK_HEADERS(sys/soundcard.h)

if test "x$enable_mt" = "xyes"; then
  if test "x$enable_pth" = "xyes"; then
    echo
  elif test "x$enable_pthread" = "xyes"; then
    echo
  else
    echo
dnl    AC_CHECK_HEADERS(pthread.h)
dnl    AC_CHECK_HEADERS(pth/pthread.h)
  fi
fi

AC_OUTPUT(Makefile eXosip/Makefile josua/Makefile scripts/Makefile)

